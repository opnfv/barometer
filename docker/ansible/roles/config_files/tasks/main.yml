# Copyright 2018-2019 Intel Corporation and OPNFV. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---

- name: Clean collectd config dir path
  file:
    state: absent
    path: "{{ config_file_dir }}"
  tags:
   - rm_config_dir
   - always

- name: Create collectd.d folder on remote host
  file:
    path: "{{ config_file_dir }}"
    force: yes
    state: directory
  tags:
    - always

- name: enable capabilities plugin
  set_fact:
    collectd_plugins: "{{ collectd_plugins + ['capabilities'] | unique }}"
  tags:
    - capabilities

- name: enable csv plugin
  set_fact:
    collectd_plugins: "{{ collectd_plugins + ['csv'] | unique }}"
  tags:
    - csv

- name: enable default plugins
  import_tasks: default_read_import.yml

- name: enable dpdk plugins
  import_tasks: dpdk.yml

- name: enable exec plugin
  import_tasks: exec.yml

- name: enable hugepages plugin
  block:
    - name: check if hugepages folders exist on host
      stat:
        path: "{{ item }}"
      register: hugepages_result
      ignore_errors: "true"
      with_items:
        /sys/devices/system/node
        /sys/kernel/mm/hugepages

    - name: enable hugepages plugin
      set_fact:
         collectd_plugins: "{{ collectd_plugins + ['hugepages'] | unique }}"
      when: hugepages_result is succeeded
  tags:
    - hugepages

- name: enable kafka plugin
  import_tasks: kafka.yml

- name: enable logfile plugin
  set_fact:
     collectd_plugins: "{{ collectd_plugins + ['logfile'] | unique }}"
  tags:
    - logfile

- name: enable logparser plugin
  import_tasks: logparser.yml

- name: enable mcelog plugin
  import_tasks: mcelog.yml

- name: enable network plugin
  import_tasks: network.yml

- name: enable prometheus plugin
  set_fact:
    "{{ collectd_plugins + ['write_prometheus'] | unique }}"
  when: groups['prometheus_hosts'] is defined
  tags:
    - prometheus

- name: enable intel_pmu plugin
  set_fact:
    collectd_plugins: "{{ collectd_plugins + ['intel_pmu'] | unique }}"
  tags:
    - pmu

- name: enable rdt plugin
  import_tasks: rdt.yml

- name: enable rddtool plugin
  import_tasks: rrdtool.yml

- name: enable snmp_agent plugin
  import_tasks: snmp_agent.yml

- name: enable syslog plugin
  set_fact:
     collectd_plugins: "{{ collectd_plugins + ['syslog'] | unique }}"
  tags:
    - syslog

- name: enable virt plugin
  import_tasks: virt.yml

- name: enable ipmi plugin
  include: ipmi.yml

- name: enable uuid plugin
  set_fact:
     collectd_plugins: "{{ collectd_plugins + ['uuid'] | unique }}"
  tags:
    - uuid

- name: Enable unixsock plugin
  set_fact:
     collectd_plugins: "{{ collectd_plugins + ['unixsock'] | unique }}"
  tags:
    - unixsock

- name: copy additional config files
  include: additional_configs.yml

- name: configure plugins
  include_role:
    name: collectd_config
  vars:
    collectd_conf_output_dir: /tmp/collectd.conf.d
  tags:
    - always
    - en_default_all

- name: "Copy the generated plugin configs"
  shell:
    sudo cp /tmp/collectd.conf.d/*.conf {{ config_file_dir }} && sudo cp /tmp/collectd.conf {{ config_file_dir }}/../collectd.conf
  tags:
    - always
    - en_default_all

- name: Update config file location
  lineinfile:
    path: "{{ config_file_dir }}../collectd.conf"
    regexp: "^(.*)/tmp/collectd.conf.d(.*)$"
    line: '\1{{ config_file_dir }}\2'
    backrefs: yes
  tags:
    - always
    - en_default_all
